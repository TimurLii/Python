# Дано натуральное число N и последовательность из N элементов. Требуется вывести эту
# последовательность в обратном порядке.
# Примечание. В программе запрещается объявлять массивы и использовать циклы (даже для ввода и вывода).
# Input: 2 -> 3 4 Output: 4 3

# x = int(input(" Введите длину строки Ё :"))
#
#
# def rotate(x):
#     if x == 0:
#         return "+"
#     num = input("Введите число :")
#     return rotate(x - 1) + num
#
#
# print(rotate(x))
# //////////////////////////////


# # палинром
# s = "hahah"
# leng = len(s)
# temp = ""
#
#
# def pali(s):
#     print(s)
#     if len(s) <= 1:
#         return True
#     elif s[0] != s[-1]:
#         return False
#     return pali(s[1:-1])
#
#
# print(pali(s))

# Задача No45. Решение в группах
# Два различных натуральных числа n и m называются дружественными, если сумма делителей числа n (включая 1, но исключая само n) равна числу m и наоборот.
# Например, 220 и 284 – дружественные числа.
# По данному числу k выведите все пары дружественных чисел, каждое из которых не превосходит k.
# Программа получает на вход одно натуральное число k, не превосходящее 105.
# Программа должна вывести все пары дружественных чисел, каждое из которых не превосходит k.
# Пары необходимо выводить по одной в строке, разделяя пробелами.
# Каждая пара должна быть выведена только один раз (перестановка чисел новую пару не дает).
# Ввод: Вывод:
# 300 220 284

# s = []
# for i in range(1, 5000):
#     summ = 0
#     for j in range(1, i // 2 + 1):
#         if i % j == 0:
#             summ += j
#     s.append([i, summ])
#
# print(s)
# for p in range(len(s)):
#     for b in range(p, len(s)):
#         if p != b and s[b][0] == s[p][1] and s[b][1] == s[p][0]:
#             print(s[b])
#
# //////////////////////////////////////
# Искусственный интеллект Антон, созданный Гилфойлом, взломал сеть умных холодильников.
# Теперь он использует их в качестве серверов "Пегого дудочника". Помогите владельцу фирмы отыскать все зараженные холодильники.
# Для каждого холодильника существует строка с данными, состоящая из строчных букв и цифр,
# и если в ней присутствует слово "anton" (необязательно рядом стоящие буквы, главное наличие последовательности букв),
# то холодильник заражен и нужно вывести номер холодильника, нумерация начинается с единицы
# Формат входных данных
# В первой строке подаётся число
# n – количество холодильников. В последующих
# n строках вводятся строки, содержащие латинские строчные буквы и цифры, в каждой строке от
# 5 до 100 символов.
# Формат выходных данных
# Программа должна вывести номера зараженных холодильников через пробел. Если таких холодильников нет, ничего выводить не нужно.#
# Sample Input 1:
# 6
# 222anton456
# a1n1t1o1n1
# 0000a0000n00t00000o000000n
# gylfole
# richard
# ant0n
# Sample Output 1:
# 1 2 3
# Sample Input 2:
# 9
# osfjwoiergwoignaewpjofwoeijfnwfonewfoignewtowenffnoeiwowjfninoiwfen
# anton
# aoooooooooontooooo
# elelelelelelelelelel
# ntoneeee
# tonee
# 253235235a5323352n25235352t253523523235oo235523523523n
# antoooooooooooooooooooooooooooooooooooooooooooooooooooon
# unton
# Sample Output 2:
# 1 2 7 8