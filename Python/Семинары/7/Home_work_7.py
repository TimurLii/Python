# Винни-Пух попросил Вас посмотреть, есть ли в его стихах ритм.
# Поскольку разобраться в его кричалках не настолько просто, насколько легко он их придумывает, Вам стоит написать программу.
# Винни-Пух считает, что ритм есть, если число слогов (т.е. число гласных букв) в каждой фразе стихотворения одинаковое.
# Фраза может состоять из одного слова, если во фразе несколько слов, то они разделяются дефисами.
# Фразы отделяются друг от друга пробелами.
# Стихотворение  Винни-Пух передаст вам автоматически в переменную stroka в виде строки.
# В ответе напишите Парам пам-пам, если с ритмом все в порядке и Пам парам, если с ритмом все не в порядке.
# Если фраза только одна, то ритм определить не получится и необходимо вывести: Количество фраз должно быть больше одной!.

# stroka = "мо-локо и мёд"
# stroka = stroka.split()
# print(stroka)
# res = []
# # print(len(stroka))
# if len(stroka) <= 1:
#     print("Количество фраз должно быть больше одной!")
# else:
#     for i in stroka:
#         count = 0
#         for j in i:
#             for k in "ауоыиэяюёе":
#                 if j == k:
#                     count += 1
#     res.append(count)
#     print(res)
#     if min(res) == max(res):
#         print("Парам пам-пам")
#     else:
#         print("Пам парам")
# def rhythm(poem):
#     poem = poem.split()
#     f = lambda word: sum(1 for i in word if i in 'аеёиоуыэюя')
#     sum_word = f(poem[0])
#     return all([f(i) == sum_word for i in poem])
#
# poem = str(input("Введите стихотворение: "))
#
# if rhythm(poem):
#     print('Парам пам-пам')
# else:
#     print('Пам парам')

# /////////////////////////////

# Напишите функцию print_operation_table(operation, num_rows, num_columns),
# которая принимает в качестве аргумента функцию, вычисляющую элемент по номеру строки и столбца.
# Аргументы num_rows и num_columns указывают число строк и столбцов таблицы, которые должны быть распечатаны.
# Нумерация строк и столбцов идет с единицы (подумайте, почему не с нуля).
# Если строк меньше двух, выдайте текст
# ОШИБКА! Размерности таблицы должны быть больше 2!.
# Примечание: бинарной операцией называется любая операция, у которой ровно два аргумента, как, например, у операции умножения.

def print_operation_table(operation, num_rows, num_columns):
    if(num_rows>=2 and num_columns>=2):
        for i in range(1,num_rows+1):
            for j in range(1, num_columns+1):
                if(i==1):
                    print(j, end=' ')
                    continue
                if(j==1):
                    print(i, end=' ')
                    continue
                result = operation(i,j)
                print(result, end=' ')
            print("\t")
    else:
        print("ОШИБКА! Размерности таблицы должны быть больше 2!")

print_operation_table(lambda x,y: x * y ,6,6)